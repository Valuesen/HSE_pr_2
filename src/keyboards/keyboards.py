from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder


def main_menu_keyboard():  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    menu_keyboard = [
        [types.KeyboardButton(text="üîß–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏üîß")],
        [types.KeyboardButton(text="üë§–ê–∫–∫–∞—É–Ω—Çüë§")]
    ]

    menu_keyboard = types.ReplyKeyboardMarkup(keyboard=menu_keyboard,
                                              resize_keyboard=True,
                                              input_field_placeholder="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    return menu_keyboard


def pwd_menage_keyboard():  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞–º–∏
    buttons = [
        [types.KeyboardButton(text="üìã–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤üìã")],
        [types.KeyboardButton(text="üì•–ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—åüì•")],
        [types.KeyboardButton(text="‚úÖ–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä.‚úÖ"), types.KeyboardButton(text="‚ùå–£–¥–∞–ª–∏—Ç—å —Å–µ—Ä.‚ùå")],
        [types.KeyboardButton(text="üîß–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—åüîß")],
        [types.KeyboardButton(text="‚¨Ö–ù–∞–∑–∞–¥")]
    ]

    keyboard = types.ReplyKeyboardMarkup(keyboard=buttons,
                                         resize_keyboard=True,
                                         input_field_placeholder="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è–º–∏")
    return keyboard


def account_keyboard():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="üîß–ù–∞—Å—Ç—Ä–æ–∏—Ç—åüîß",
        callback_data="edit_profile")
    )

    builder.add(types.InlineKeyboardButton(
        text="‚ùå–ó–∞–∫—Ä—ã—Ç—å‚ùå",
        callback_data="close_profile_menu")
    )
    builder.adjust(1)
    return builder.as_markup()


def edit_account_keyboard(user):
    alerts_text = '–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' if user[5] == 0 else '–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
    pwd_text = '–í–∫–ª—é—á–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è' if user[6] == 0 else '–í—ã–∫–ª—é—á–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è'

    buttons = [
        [types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç–∏—å –∏–º—è", callback_data='edit_name')],
        [types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å", callback_data='edit_passwd')],
        [types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è", callback_data='edit_period')],
        [types.InlineKeyboardButton(text=alerts_text, callback_data='edit_alerts')],
        [types.InlineKeyboardButton(text=pwd_text, callback_data='edit_passwd_req')],
        [types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data='del_account')],
        [types.InlineKeyboardButton(text="‚ùå–ó–∞–∫—Ä—ã—Ç—å‚ùå", callback_data='close_profile_menu')]
    ]

    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def verification_keyboard(func):
    builder = None
    if func == 'add':
        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(
            text="‚úÖ–î–æ–±–∞–≤–∏—Ç—å‚úÖ",
            callback_data="add_service")
        )

        builder.add(types.InlineKeyboardButton(
            text="‚ùå–û—Ç–º–µ–Ω–∏—Ç—å‚ùå",
            callback_data="cancel")
        )
    elif func == 'edit':
        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(
            text="‚úÖ–û–±–Ω–æ–≤–∏—Ç—å‚úÖ",
            callback_data="edit_service")
        )

        builder.add(types.InlineKeyboardButton(
            text="‚ùå–û—Å—Ç–∞–≤–∏—Ç—å‚ùå",
            callback_data="cancel")
        )
    elif func == 'delete':
        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(
            text="‚úÖ–û—Å—Ç–∞–≤–∏—Ç—å‚úÖ",
            callback_data="cancel")
        )

        builder.add(types.InlineKeyboardButton(
            text="‚ùå–£–¥–∞–ª–∏—Ç—å‚ùå",
            callback_data="delete_service")
        )

    elif func == 'edit_name':
        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(
            text="‚úÖ–ò–∑–º–µ–Ω–∏—Ç—å‚úÖ",
            callback_data="edit_name_final")
        )

        builder.add(types.InlineKeyboardButton(
            text="‚ùå–û—Å—Ç–∞–≤–∏—Ç—å‚ùå",
            callback_data="cancel")
        )
    elif func == 'del_account':
        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(
            text="‚úÖ–û—Å—Ç–∞–≤–∏—Ç—å‚úÖ",
            callback_data="cancel")
        )

        builder.add(types.InlineKeyboardButton(
            text="‚ùå–£–¥–∞–ª–∏—Ç—å‚ùå",
            callback_data="del_account_final")
        )
    elif func == 'edit_ac_pwd':
        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(
            text="‚úÖ–°–º–µ–Ω–∏—Ç—å‚úÖ",
            callback_data="edit_ac_true")
        )

        builder.add(types.InlineKeyboardButton(
            text="‚ùå–û—Å—Ç–∞–≤–∏—Ç—å‚ùå",
            callback_data="cancel")
        )
    builder.adjust(2)
    return builder.as_markup()


def services_keyboard(services):
    builder = InlineKeyboardBuilder()
    for i in services:
        builder.add(types.InlineKeyboardButton(
            text=i,
            callback_data=f'service:{i}')
        )

    builder.add(types.InlineKeyboardButton(
        text="‚ùå–û—Ç–º–µ–Ω–∏—Ç—å‚ùå",
        callback_data="cancel")
    )
    builder.adjust(1)

    return builder.as_markup()


def apsched_keyboad():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="‚úÖ–°–º–µ–Ω–∏—Ç—å‚úÖ",
        callback_data="edit_service_password")
    )
    builder.add(types.InlineKeyboardButton(
        text="‚ùå–ó–∞–∫—Ä—ã—Ç—å‚ùå",
        callback_data="cancel")
    )
    builder.adjust(1)

    return builder.as_markup()


def services_edit_keyboard(services):
    builder = InlineKeyboardBuilder()

    for i in services:
        builder.add(types.InlineKeyboardButton(
            text=i,
            callback_data=f'edit:{i}')
        )
    builder.add(types.InlineKeyboardButton(
        text="‚ùå–û—Ç–º–µ–Ω–∏—Ç—å‚ùå",
        callback_data="cancel")
    )
    builder.adjust(1)

    return builder.as_markup()


def services_delete_keyboard(services):
    builder = InlineKeyboardBuilder()

    for i in services:
        builder.add(types.InlineKeyboardButton(
            text=i,
            callback_data=f'del:{i}')
        )
    builder.add(types.InlineKeyboardButton(
        text="‚ùå–û—Ç–º–µ–Ω–∏—Ç—å‚ùå",
        callback_data="cancel")
    )
    builder.adjust(1)

    return builder.as_markup()


def start_keyboard():
    buttons = [
        [types.KeyboardButton(text="/start")]
    ]

    keyboard = types.ReplyKeyboardMarkup(keyboard=buttons,
                                         resize_keyboard=True,
                                         input_field_placeholder="–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    return keyboard
